// generated by Fast Light User Interface Designer (fluid) version 1.0300

#ifndef EffUI_h
#define EffUI_h
#include <FL/Fl.H>
#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include "../globals.h"
#include "Fl_Osc_Dial.H"
#include "Fl_Osc_Check.H"
#include "Fl_EQGraph.H"
#include "Fl_Osc_Pane.H"
#include "EnvelopeUI.h"
#include "FilterUI.h"
#include "../Misc/Util.h"
#include "../Effects/EffectMgr.h"
#include "../Effects/Phaser.h" /* for macros only, TODO */
#include "../Effects/Alienwah.h" /* for macros only, TODO */
#include "PresetsUI.h"
#include "common.H"
using namespace zyncarla;
#include <FL/Fl_Counter.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Double_Window.H>

class EffUI : public Fl_Osc_Group,public PresetsUI_ {
public:
  EffUI(int x,int y, int w, int h, const char *label=0);
  ~EffUI();
  Fl_Group* make_null_window();
  Fl_Group *effnullwindow;
  Fl_Group* make_reverb_window();
  Fl_Group *effreverbwindow;
  Fl_Osc_Choice *revp;
  static Fl_Menu_Item menu_revp[];
  Fl_Osc_Choice *revp10;
private:
  void cb_revp10_i(Fl_Osc_Choice*, void*);
  static void cb_revp10(Fl_Osc_Choice*, void*);
  static Fl_Menu_Item menu_revp10[];
public:
  Fl_Osc_Dial *revp0;
  Fl_Osc_Dial *revp1;
  Fl_Osc_Dial *revp2;
  Fl_Osc_Dial *revp3;
  Fl_Osc_Dial *revp4;
  Fl_Osc_Dial *revp12;
  Fl_Osc_Dial *revp6;
  Fl_Osc_Dial *revp7;
  Fl_Osc_Dial *revp8;
  Fl_Osc_Dial *revp9;
  Fl_Osc_Dial *revp11;
  Fl_Group* make_echo_window();
  Fl_Group *effechowindow;
  Fl_Osc_Choice *echop;
  static Fl_Menu_Item menu_echop[];
  Fl_Osc_Dial *echop0;
  Fl_Osc_Dial *echop1;
  Fl_Osc_Dial *echop2;
  Fl_Osc_Dial *echop3;
  Fl_Osc_Dial *echop4;
  Fl_Osc_Dial *echop5;
  Fl_Osc_Dial *echop6;
  Fl_Group* make_chorus_window();
  Fl_Group *effchoruswindow;
  Fl_Osc_Choice *chorusp;
  static Fl_Menu_Item menu_chorusp[];
  Fl_Osc_Dial *chorusp0;
  Fl_Osc_Dial *chorusp1;
  Fl_Osc_Dial *chorusp2;
  Fl_Osc_Dial *chorusp3;
  Fl_Osc_Dial *chorusp5;
  Fl_Osc_Dial *chorusp6;
  Fl_Osc_Dial *chorusp7;
  Fl_Osc_Dial *chorusp8;
  Fl_Osc_Dial *chorusp9;
  Fl_Osc_Check *chorusp11;
  Fl_Osc_Choice *chorusp4;
  static Fl_Menu_Item menu_chorusp4[];
  Fl_Group* make_phaser_window();
  Fl_Group *effphaserwindow;
  Fl_Osc_Choice *phaserp;
  static Fl_Menu_Item menu_phaserp[];
  Fl_Osc_Dial *phaserp0;
  Fl_Osc_Dial *phaserp1;
  Fl_Osc_Dial *phaserp2;
  Fl_Osc_Dial *phaserp3;
  Fl_Osc_Choice *phaserp4;
  static Fl_Menu_Item menu_phaserp4[];
  Fl_Osc_Dial *phaserp5;
  Fl_Osc_Dial *phaserp6;
  Fl_Osc_Dial *phaserp7;
  Fl_Osc_Counter *phaserp8;
  Fl_Osc_Dial *phaserp9;
  Fl_Osc_Check *phaserp10;
  Fl_Osc_Dial *phaserp11;
  Fl_Osc_Check *phaserp12;
  Fl_Osc_Dial *phaserp13;
  Fl_Osc_Check *phaserp14;
  Fl_Group* make_alienwah_window();
  Fl_Group *effalienwahwindow;
  Fl_Osc_Choice *awp;
  static Fl_Menu_Item menu_awp[];
  Fl_Osc_Dial *awp0;
  Fl_Osc_Dial *awp1;
  Fl_Osc_Dial *awp2;
  Fl_Osc_Dial *awp3;
  Fl_Osc_Dial *awp5;
  Fl_Osc_Dial *awp6;
  Fl_Osc_Dial *awp7;
  Fl_Osc_Dial *awp9;
  Fl_Osc_Choice *awp4;
  static Fl_Menu_Item menu_awp4[];
  Fl_Osc_Dial *awp10;
  Fl_Osc_Counter *awp8;
  Fl_Group* make_distorsion_window();
  Fl_Group *effdistorsionwindow;
  Fl_Osc_Choice *distp;
  static Fl_Menu_Item menu_distp[];
  Fl_Osc_Dial *distp0;
  Fl_Osc_Dial *distp1;
  Fl_Osc_Dial *distp2;
  Fl_Osc_Dial *distp3;
  Fl_Osc_Dial *distp4;
  Fl_Osc_Dial *distp7;
  Fl_Osc_Dial *distp8;
  Fl_Osc_Choice *distp5;
  static Fl_Menu_Item menu_distp5[];
  Fl_Osc_Check *distp6;
  Fl_Osc_Check *distp9;
  Fl_Osc_Check *distp10;
  Fl_Group* make_eq_window();
  Fl_Group *effeqwindow;
  Fl_Osc_Dial *eqp0;
private:
  void cb_eqp0_i(Fl_Osc_Dial*, void*);
  static void cb_eqp0(Fl_Osc_Dial*, void*);
public:
  Fl_Counter *bandcounter;
private:
  void cb_bandcounter_i(Fl_Counter*, void*);
  static void cb_bandcounter(Fl_Counter*, void*);
public:
  Fl_Group *bandgroup;
  Fl_Osc_Dial *freqdial;
private:
  void cb_freqdial_i(Fl_Osc_Dial*, void*);
  static void cb_freqdial(Fl_Osc_Dial*, void*);
public:
  Fl_Osc_Dial *gaindial;
private:
  void cb_gaindial_i(Fl_Osc_Dial*, void*);
  static void cb_gaindial(Fl_Osc_Dial*, void*);
public:
  Fl_Osc_Dial *qdial;
private:
  void cb_qdial_i(Fl_Osc_Dial*, void*);
  static void cb_qdial(Fl_Osc_Dial*, void*);
public:
  Fl_Osc_Counter *stagescounter;
private:
  void cb_stagescounter_i(Fl_Osc_Counter*, void*);
  static void cb_stagescounter(Fl_Osc_Counter*, void*);
public:
  Fl_Osc_Choice *typechoice;
private:
  void cb_typechoice_i(Fl_Osc_Choice*, void*);
  static void cb_typechoice(Fl_Osc_Choice*, void*);
  static Fl_Menu_Item menu_typechoice[];
public:
  Fl_EQGraph *eqgraph;
  Fl_Group* make_dynamicfilter_window();
  Fl_Group *effdynamicfilterwindow;
  Fl_Osc_Choice *dfp;
  static Fl_Menu_Item menu_dfp[];
  Fl_Osc_Dial *dfp0;
  Fl_Osc_Dial *dfp1;
  Fl_Osc_Dial *dfp2;
  Fl_Osc_Dial *dfp3;
  Fl_Osc_Dial *dfp5;
  Fl_Osc_Dial *dfp6;
  Fl_Osc_Choice *dfp4;
  static Fl_Menu_Item menu_dfp4[];
private:
  void cb_Filter_i(Fl_Button*, void*);
  static void cb_Filter(Fl_Button*, void*);
public:
  Fl_Osc_Dial *dfp7;
  Fl_Osc_Dial *dfp9;
  Fl_Osc_Check *dfp8;
  Fl_Double_Window* make_filter_window();
  Fl_Double_Window *filterwindow;
private:
  void cb_Close_i(Fl_Button*, void*);
  static void cb_Close(Fl_Button*, void*);
public:
  void init(bool ins_);
  void refresh();
private:
  int eqband; 
public:
  bool insertion; 
  int efftype; 
};

class SimpleEffUI : public Fl_Osc_Group,public PresetsUI_ {
public:
  SimpleEffUI(int x,int y, int w, int h, const char *label=0);
  ~SimpleEffUI();
  Fl_Group* make_null_window();
  Fl_Group *effnullwindow;
  Fl_Group* make_reverb_window();
  Fl_Group *effreverbwindow;
  Fl_Osc_Choice *revp;
  static Fl_Menu_Item menu_revp1[];
  Fl_Osc_Dial *revp0;
  Fl_Osc_Dial *revp2;
  Fl_Osc_Dial *revp3;
  Fl_Osc_Dial *revp9;
  Fl_Group* make_echo_window();
  Fl_Group *effechowindow;
  Fl_Osc_Choice *echop;
  static Fl_Menu_Item menu_echop1[];
  Fl_Osc_Dial *echop0;
  Fl_Osc_Dial *echop2;
  Fl_Osc_Dial *echop5;
  Fl_Group* make_chorus_window();
  Fl_Group *effchoruswindow;
  Fl_Osc_Choice *chorusp;
  static Fl_Menu_Item menu_chorusp1[];
  Fl_Osc_Dial *chorusp0;
  Fl_Osc_Dial *chorusp2;
  Fl_Osc_Dial *chorusp6;
  Fl_Osc_Dial *chorusp7;
  Fl_Osc_Dial *chorusp8;
  Fl_Group* make_phaser_window();
  Fl_Group *effphaserwindow;
  Fl_Osc_Choice *phaserp;
  static Fl_Menu_Item menu_phaserp1[];
  Fl_Osc_Dial *phaserp0;
  Fl_Osc_Dial *phaserp2;
  Fl_Osc_Dial *phaserp5;
  Fl_Osc_Dial *phaserp6;
  Fl_Osc_Dial *phaserp7;
  Fl_Osc_Counter *phaserp8;
  Fl_Group* make_alienwah_window();
  Fl_Group *effalienwahwindow;
  Fl_Osc_Choice *awp;
  static Fl_Menu_Item menu_awp1[];
  Fl_Osc_Dial *awp0;
  Fl_Osc_Dial *awp2;
  Fl_Osc_Dial *awp6;
  Fl_Osc_Counter *awp8;
  Fl_Group* make_distorsion_window();
  Fl_Group *effdistorsionwindow;
  Fl_Osc_Choice *distp;
  static Fl_Menu_Item menu_distp1[];
  Fl_Osc_Dial *distp0;
  Fl_Osc_Dial *distp3;
  Fl_Osc_Dial *distp4;
  Fl_Osc_Dial *distp7;
  Fl_Osc_Choice *distp5;
  static Fl_Menu_Item menu_distp51[];
  Fl_Group* make_eq_window();
  Fl_Group *effeqwindow;
  Fl_Counter *bandcounter;
private:
  void cb_bandcounter1_i(Fl_Counter*, void*);
  static void cb_bandcounter1(Fl_Counter*, void*);
public:
  Fl_Group *bandgroup;
  Fl_Osc_Dial *freqdial;
private:
  void cb_freqdial1_i(Fl_Osc_Dial*, void*);
  static void cb_freqdial1(Fl_Osc_Dial*, void*);
public:
  Fl_Osc_Dial *gaindial;
private:
  void cb_gaindial1_i(Fl_Osc_Dial*, void*);
  static void cb_gaindial1(Fl_Osc_Dial*, void*);
public:
  Fl_Osc_Dial *qdial;
private:
  void cb_qdial1_i(Fl_Osc_Dial*, void*);
  static void cb_qdial1(Fl_Osc_Dial*, void*);
public:
  Fl_Osc_Counter *stagescounter;
private:
  void cb_stagescounter1_i(Fl_Osc_Counter*, void*);
  static void cb_stagescounter1(Fl_Osc_Counter*, void*);
public:
  Fl_Osc_Choice *typechoice;
private:
  void cb_typechoice1_i(Fl_Osc_Choice*, void*);
  static void cb_typechoice1(Fl_Osc_Choice*, void*);
  static Fl_Menu_Item menu_typechoice1[];
public:
  Fl_EQGraph *eqgraph;
  Fl_Group* make_dynamicfilter_window();
  Fl_Group *effdynamicfilterwindow;
  Fl_Osc_Choice *dfp;
  static Fl_Menu_Item menu_dfp1[];
  Fl_Osc_Dial *dfp0;
  Fl_Osc_Dial *dfp2;
  Fl_Osc_Dial *dfp6;
  Fl_Osc_Dial *dfp7;
  Fl_Osc_Dial *dfp9;
  void init(bool ins_);
  void refresh();
private:
  int eqband; 
public:
  bool insertion; 
  int efftype; 
};
#endif
