// generated by Fast Light User Interface Designer (fluid) version 1.0300

#ifndef PresetsUI_h
#define PresetsUI_h
#include <FL/Fl.H>
#include <FL/fl_ask.H>
#include <cstdio>
#include <cstdlib>
#include <string>
#include "Osc_ListModel.h"
#include "Osc_DataModel.h"

class PresetsUI_ {
public:
  virtual void refresh();
  virtual ~PresetsUI_();
};
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Browser.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Input.H>

class PresetsUI {
public:
  PresetsUI(Fl_Osc_Interface *osc_);
  ~PresetsUI();
  Fl_Double_Window* make_window();
  Fl_Double_Window *copywin;
  Fl_Browser *copybrowse;
private:
  void cb_copybrowse_i(Fl_Browser*, void*);
  static void cb_copybrowse(Fl_Browser*, void*);
public:
  Fl_Button *copypbutton;
private:
  void cb_copypbutton_i(Fl_Button*, void*);
  static void cb_copypbutton(Fl_Button*, void*);
public:
  Fl_Button *copybutton;
private:
  void cb_copybutton_i(Fl_Button*, void*);
  static void cb_copybutton(Fl_Button*, void*);
  void cb_Cancel_i(Fl_Button*, void*);
  static void cb_Cancel(Fl_Button*, void*);
public:
  Fl_Box *copytypetext;
  Fl_Input *presetname;
private:
  void cb_presetname_i(Fl_Input*, void*);
  static void cb_presetname(Fl_Input*, void*);
public:
  Fl_Double_Window *pastewin;
  Fl_Browser *pastebrowse;
private:
  void cb_pastebrowse_i(Fl_Browser*, void*);
  static void cb_pastebrowse(Fl_Browser*, void*);
public:
  Fl_Button *pastepbutton;
private:
  void cb_pastepbutton_i(Fl_Button*, void*);
  static void cb_pastepbutton(Fl_Button*, void*);
public:
  Fl_Button *pastebutton;
private:
  void cb_pastebutton_i(Fl_Button*, void*);
  static void cb_pastebutton(Fl_Button*, void*);
  void cb_Cancel1_i(Fl_Button*, void*);
  static void cb_Cancel1(Fl_Button*, void*);
public:
  Fl_Box *pastetypetext;
  Fl_Button *deletepbutton;
private:
  void cb_deletepbutton_i(Fl_Button*, void*);
  static void cb_deletepbutton(Fl_Button*, void*);
public:
  void paste(std::string url_, PresetsUI_ *pui, int idx);
  void copy(std::string url_, int idx);
  void copy(std::string url_);
  void paste(std::string url_, PresetsUI_ *pui);
  void rescan(std::string url);
  std::string url; 
  Fl_Osc_Interface *osc; 
  Osc_ListModel listmodel; 
  Osc_DataModel datamodel; 
  std::vector<std::string> files; 
  bool arraymode; 
  int arrayidx; 
  PresetsUI_ *pui; 
};
extern PresetsUI *presetsui; 
#endif
