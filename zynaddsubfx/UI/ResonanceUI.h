// generated by Fast Light User Interface Designer (fluid) version 1.0300

#ifndef ResonanceUI_h
#define ResonanceUI_h
#include <FL/Fl.H>
#include <FL/Fl_Box.H>
#include <FL/fl_draw.H>
#include <FL/Fl_Value_Output.H>
#include "Fl_Osc_Dial.H"
#include "Fl_Osc_Pane.H"
#include "Fl_Osc_Button.H"
#include "Fl_Osc_Check.H"
#include "Fl_Osc_Slider.H"
#include "Fl_Osc_Output.H"
#include "Fl_Resonance_Graph.H"
#include "PresetsUI.h"
#include <FL/Fl_Value_Output.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Box.H>

class ResonanceUI : PresetsUI_ {
public:
  Fl_Osc_Window* make_window(Fl_Osc_Interface *osc, std::string loc);
  Fl_Osc_Window *resonancewindow;
  Fl_Value_Output *khzvalue;
  Fl_Value_Output *dbvalue;
private:
  void cb_Close_i(Fl_Button*, void*);
  static void cb_Close(Fl_Button*, void*);
  void cb_Zero_i(Fl_Osc_Button*, void*);
  static void cb_Zero(Fl_Osc_Button*, void*);
  void cb_Smooth_i(Fl_Osc_Button*, void*);
  static void cb_Smooth(Fl_Osc_Button*, void*);
public:
  Fl_Osc_Check *enabled;
  Fl_Osc_Slider *maxdb;
private:
  void cb_maxdb_i(Fl_Osc_Slider*, void*);
  static void cb_maxdb(Fl_Osc_Slider*, void*);
public:
  Fl_Value_Output *maxdbvo;
  Fl_Osc_Output *centerfreqvo;
private:
  void cb_centerfreqvo_i(Fl_Osc_Output*, void*);
  static void cb_centerfreqvo(Fl_Osc_Output*, void*);
public:
  Fl_Osc_Output *octavesfreqvo;
private:
  void cb_octavesfreqvo_i(Fl_Osc_Output*, void*);
  static void cb_octavesfreqvo(Fl_Osc_Output*, void*);
  void cb_RND2_i(Fl_Osc_Button*, void*);
  static void cb_RND2(Fl_Osc_Button*, void*);
  void cb_RND1_i(Fl_Osc_Button*, void*);
  static void cb_RND1(Fl_Osc_Button*, void*);
  void cb_RND3_i(Fl_Osc_Button*, void*);
  static void cb_RND3(Fl_Osc_Button*, void*);
public:
  Fl_Osc_Check *p1st;
private:
  void cb_InterpP_i(Fl_Osc_Button*, void*);
  static void cb_InterpP(Fl_Osc_Button*, void*);
public:
  Fl_Osc_Slider *centerfreq;
private:
  void cb_centerfreq_i(Fl_Osc_Slider*, void*);
  static void cb_centerfreq(Fl_Osc_Slider*, void*);
public:
  Fl_Osc_Slider *octavesfreq;
private:
  void cb_octavesfreq_i(Fl_Osc_Slider*, void*);
  static void cb_octavesfreq(Fl_Osc_Slider*, void*);
  void cb_C_i(Fl_Button*, void*);
  static void cb_C(Fl_Button*, void*);
  void cb_P_i(Fl_Button*, void*);
  static void cb_P(Fl_Button*, void*);
public:
  Fl_Button *applybutton;
private:
  void cb_applybutton_i(Fl_Button*, void*);
  static void cb_applybutton(Fl_Button*, void*);
public:
  Fl_Resonance_Graph *rg;
  ResonanceUI(Fl_Osc_Interface *osc, std::string loc);
  ~ResonanceUI();
  void redrawPADnoteApply();
  void setcbwidget(Fl_Widget *cbwidget,Fl_Widget *cbapplywidget);
  void refresh();
private:
  Fl_Widget *cbwidget,*cbapplywidget; 
};
#endif
