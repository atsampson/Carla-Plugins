// generated by Fast Light User Interface Designer (fluid) version 1.0300

#ifndef PartUI_h
#define PartUI_h
#include <FL/Fl.H>
#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <string>
#include "Fl_Osc_Dial.H"
#include "Fl_Osc_Input.H"
#include "PartNameButton.h"
#include "EffUI.h"
#include "BankUI.h"
#include "ADnoteUI.h"
#include "SUBnoteUI.h"
#include "PADnoteUI.h"
#include "../Misc/Config.h"
#include "../Misc/Master.h"
#include "../Misc/Part.h"

class PartSysEffSend : public Fl_Group {
  Fl_Group* make_window();
  Fl_Group *syseffsend;
public:
  Fl_Osc_Dial *widget;
  PartSysEffSend(int x,int y, int w, int h, const char *label=0);
  void init(int npart_,int neff_);
  void rebase(int part);
  ~PartSysEffSend();
private:
  int neff; 
  int npart; 
};
#include <FL/Fl_Button.H>

class PartKitItem : public Fl_Osc_Group {
  Fl_Osc_Group* make_window();
  Fl_Osc_Group *partkititem;
  Fl_Osc_Group *partkititemgroup;
public:
  Fl_Osc_Counter *minkcounter;
private:
  void cb_m_i(Fl_Osc_Button*, void*);
  static void cb_m(Fl_Osc_Button*, void*);
  void cb_M_i(Fl_Osc_Button*, void*);
  static void cb_M(Fl_Osc_Button*, void*);
  void cb_R_i(Fl_Button*, void*);
  static void cb_R(Fl_Button*, void*);
public:
  Fl_Button *adeditbutton;
private:
  void cb_adeditbutton_i(Fl_Button*, void*);
  static void cb_adeditbutton(Fl_Button*, void*);
public:
  Fl_Button *subeditbutton;
private:
  void cb_subeditbutton_i(Fl_Button*, void*);
  static void cb_subeditbutton(Fl_Button*, void*);
public:
  Fl_Osc_Check *mutedcheck;
  Fl_Osc_Counter *maxkcounter;
  Fl_Osc_Input *labelbutton;
private:
  void cb_labelbutton_i(Fl_Osc_Input*, void*);
  static void cb_labelbutton(Fl_Osc_Input*, void*);
  Fl_Osc_Check *adcheck;
  void cb_adcheck_i(Fl_Osc_Check*, void*);
  static void cb_adcheck(Fl_Osc_Check*, void*);
  Fl_Osc_Check *subcheck;
  void cb_subcheck_i(Fl_Osc_Check*, void*);
  static void cb_subcheck(Fl_Osc_Check*, void*);
public:
  Fl_Osc_Choice *sendtoeffect;
  Fl_Button *padeditbutton;
private:
  void cb_padeditbutton_i(Fl_Button*, void*);
  static void cb_padeditbutton(Fl_Button*, void*);
  Fl_Osc_Check *padcheck;
  void cb_padcheck_i(Fl_Osc_Check*, void*);
  static void cb_padcheck(Fl_Osc_Check*, void*);
  Fl_Osc_Check *enabledcheck;
  void cb_enabledcheck_i(Fl_Osc_Check*, void*);
  static void cb_enabledcheck(Fl_Osc_Check*, void*);
public:
  PartKitItem(int x,int y, int w, int h, const char *label=0);
  void refresh();
  void init(int n_,class PartUI *partui_);
  ~PartKitItem();
private:
  int n; 
  char label[10]; 
  class PartUI *partui;
};
#include <FL/Fl_Scroll.H>
#include <FL/Fl_Pack.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Check_Button.H>
#include <FL/Fl_Counter.H>
#include <FL/Fl_Group.H>

class PartUI : public Fl_Osc_Group {
  Fl_Group* make_window();
  Fl_Group *partgroup;
public:
  Fl_Osc_Group *partgroupui;
private:
  void cb_Grand_i(PartNameButton*, void*);
  static void cb_Grand(PartNameButton*, void*);
public:
  Fl_Osc_Counter *minkcounter;
private:
  void cb_minkcounter_i(Fl_Osc_Counter*, void*);
  static void cb_minkcounter(Fl_Osc_Counter*, void*);
public:
  Fl_Osc_Counter *maxkcounter;
private:
  void cb_maxkcounter_i(Fl_Osc_Counter*, void*);
  static void cb_maxkcounter(Fl_Osc_Counter*, void*);
  void cb_Controllers_i(Fl_Button*, void*);
  static void cb_Controllers(Fl_Button*, void*);
  void cb_Edit_i(Fl_Button*, void*);
  static void cb_Edit(Fl_Button*, void*);
  void cb_m1_i(Fl_Osc_Button*, void*);
  static void cb_m1(Fl_Osc_Button*, void*);
  void cb_M1_i(Fl_Osc_Button*, void*);
  static void cb_M1(Fl_Osc_Button*, void*);
  void cb_R1_i(Fl_Osc_Button*, void*);
  static void cb_R1(Fl_Osc_Button*, void*);
public:
  Fl_Osc_Counter *keylimitlist;
  Fl_Osc_Check *partenablebutton;
private:
  void cb_partenablebutton_i(Fl_Osc_Check*, void*);
  static void cb_partenablebutton(Fl_Osc_Check*, void*);
  Fl_Osc_Window *ctlwindow;
public:
  Fl_Check_Button *benddir;
private:
  void cb_benddir_i(Fl_Check_Button*, void*);
  static void cb_benddir(Fl_Check_Button*, void*);
public:
  Fl_Osc_Counter *bendrng;
  Fl_Osc_Check *bendsplt;
private:
  void cb_bendsplt_i(Fl_Osc_Check*, void*);
  static void cb_bendsplt(Fl_Osc_Check*, void*);
  void cb_Sustain_i(Fl_Osc_Check*, void*);
  static void cb_Sustain(Fl_Osc_Check*, void*);
  void cb_Close_i(Fl_Button*, void*);
  static void cb_Close(Fl_Button*, void*);
  void cb_Reset_i(Fl_Osc_Button*, void*);
  static void cb_Reset(Fl_Osc_Button*, void*);
public:
  Fl_Osc_Dial *propta;
  Fl_Osc_Dial *proptb;
private:
  void cb_Proprt_i(Fl_Osc_Check*, void*);
  static void cb_Proprt(Fl_Osc_Check*, void*);
  Fl_Osc_Window *partfx;
public:
  Fl_Counter *inseffnocounter;
private:
  void cb_inseffnocounter_i(Fl_Counter*, void*);
  static void cb_inseffnocounter(Fl_Counter*, void*);
public:
  Fl_Osc_Choice *insefftype;
private:
  void cb_insefftype_i(Fl_Osc_Choice*, void*);
  static void cb_insefftype(Fl_Osc_Choice*, void*);
  static Fl_Menu_Item menu_insefftype[];
public:
  Fl_Osc_Group *inseffectuigroup;
  EffUI *inseffectui;
private:
  void cb_Close1_i(Fl_Button*, void*);
  static void cb_Close1(Fl_Button*, void*);
public:
  Fl_Osc_Choice *sendtochoice;
private:
  void cb_sendtochoice_i(Fl_Osc_Choice*, void*);
  static void cb_sendtochoice(Fl_Osc_Choice*, void*);
  static Fl_Menu_Item menu_sendtochoice[];
public:
  Fl_Osc_Check *bypasseff;
private:
  void cb_C_i(Fl_Button*, void*);
  static void cb_C(Fl_Button*, void*);
  void cb_P_i(Fl_Button*, void*);
  static void cb_P(Fl_Button*, void*);
public:
  Fl_Osc_Window *instrumentkitlist;
private:
  void cb_Close2_i(Fl_Button*, void*);
  static void cb_Close2(Fl_Button*, void*);
public:
  Fl_Scroll *kitlist;
private:
  void cb_Mode_i(Fl_Osc_Choice*, void*);
  static void cb_Mode(Fl_Osc_Choice*, void*);
  static Fl_Menu_Item menu_Mode[];
  void cb_Comments_i(Fl_Button*, void*);
  static void cb_Comments(Fl_Button*, void*);
  void cb_Effects_i(Fl_Button*, void*);
  static void cb_Effects(Fl_Button*, void*);
public:
  Fl_Osc_Window *instrumenteditwindow;
  Fl_Osc_Group *editgroup;
  Fl_Button *padeditbutton;
private:
  void cb_padeditbutton1_i(Fl_Button*, void*);
  static void cb_padeditbutton1(Fl_Button*, void*);
public:
  Fl_Osc_Check *padsynenabledcheck;
private:
  void cb_padsynenabledcheck_i(Fl_Osc_Check*, void*);
  static void cb_padsynenabledcheck(Fl_Osc_Check*, void*);
public:
  Fl_Osc_Check *adsynenabledcheck;
private:
  void cb_adsynenabledcheck_i(Fl_Osc_Check*, void*);
  static void cb_adsynenabledcheck(Fl_Osc_Check*, void*);
public:
  Fl_Button *adeditbutton;
private:
  void cb_adeditbutton1_i(Fl_Button*, void*);
  static void cb_adeditbutton1(Fl_Button*, void*);
public:
  Fl_Osc_Check *subsynenabledcheck;
private:
  void cb_subsynenabledcheck_i(Fl_Osc_Check*, void*);
  static void cb_subsynenabledcheck(Fl_Osc_Check*, void*);
public:
  Fl_Button *subeditbutton;
private:
  void cb_subeditbutton1_i(Fl_Button*, void*);
  static void cb_subeditbutton1(Fl_Button*, void*);
  void cb_Kit_i(Fl_Button*, void*);
  static void cb_Kit(Fl_Button*, void*);
  void cb_Effects1_i(Fl_Button*, void*);
  static void cb_Effects1(Fl_Button*, void*);
  void cb_Author_i(Fl_Osc_Input*, void*);
  static void cb_Author(Fl_Osc_Input*, void*);
  void cb_Comments1_i(Fl_Osc_Input*, void*);
  static void cb_Comments1(Fl_Osc_Input*, void*);
  static Fl_Menu_Item menu_Type[];
  void cb_Close3_i(Fl_Button*, void*);
  static void cb_Close3(Fl_Button*, void*);
public:
  PartUI(int x,int y, int w, int h, const char *label=0);
  void init(std::string part_path_, int npart_,BankUI *bankui_, std::string loc_, Fl_Osc_Interface *osc_);
  int cleanuplastkit(int kititem);
  void showparameters(int kititem,int engine);
  void showvoiceparams(int kititem, bool voicelist);
  ~PartUI();
private:
  BankUI *bankui; 
public:
  ADnoteUI *adnoteui; 
private:
  SUBnoteUI *subnoteui; 
  PADnoteUI *padnoteui; 
  PartSysEffSend *psyef[NUM_SYS_EFX]; 
  int npart; 
  int ninseff; 
  int lastkititem; 
  PartKitItem *partkititem[NUM_KIT_ITEMS]; 
  std::string part_path; 
  std::string loc; 
  Fl_Osc_Interface *osc; 
public:
  void rebase(std::string new_loc);
};
#endif
